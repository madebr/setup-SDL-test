name: Build (Ngage)

on: [push, pull_request]

jobs:
  build:
    name: Ngage
    runs-on: windows-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Checkout ngage-toolchain
        uses: actions/checkout@v3
        with:
          repository: ngagesdk/ngage-toolchain
          path: ngage-toolchain
          submodules: true

      - name: Setup environment
        id: ngagesdk
        shell: python
        run: |
          import os
          import pathlib
          
          ngagesdk = str(pathlib.Path.cwd() / "ngage-toolchain").replace("\\", "/")
          
          print(f"ngagesdk={ngagesdk}")
          
          with open(os.environ["GITHUB_ENV"], "a") as f:
            print(f"NGAGESDK={ ngagesdk }", file=f)
          
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
            print(f"prefix={ ngagesdk }", file=f)
          
          with open(os.environ["GITHUB_PATH"], "r") as f:
            original_path = f.read()
          
          new_path = f"{ngagesdk}/sdk/6.1/Shared/EP0C32/gcc/bin\n{ original_path}"
          
          with open(os.environ["GITHUB_PATH"], "w") as f:
            f.write(new_path)
          
          print("original path:")
          print(original_path)
          print("new path path:")
          print(new_path)

      - name: Setup toolchain
        run: |
          cmake -S "${{ steps.ngagesdk.outputs.prefix }}/setup" `
                -B "${{ steps.ngagesdk.outputs.prefix }}/setup/build" `
                -G Ninja      
          cmake --build "${{ steps.ngagesdk.outputs.prefix }}/setup/build"

      - uses: madebr/setup-sdl@master
        timeout-minutes: 8
        with:
          version: "2-latest"
          pre-release: false
          build-type: "Release"
          ninja: true
          cmake-toolchain-file: '${{ steps.ngagesdk.outputs.prefix }}/cmake/ngage-toolchain.cmake'
          verbose: true

      - name: Configure (CMake)
        run: |
          cmake -S . `
                -B build `
                -G Ninja `
                -DCMAKE_TOOLCHAIN_FILE="${{ steps.ngagesdk.outputs.prefix }}/cmake/ngage-toolchain.cmake"

      - name: Build (CMake)
        run: cmake --build build --verbose
